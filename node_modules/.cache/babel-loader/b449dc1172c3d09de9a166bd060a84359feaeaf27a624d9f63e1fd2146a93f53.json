{"ast":null,"code":"var _jsxFileName = \"/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/ui/NetworkCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkCard = ({\n  userInfo\n}) => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedUsers, setSelectedUser] = useState([]);\n\n  //console.log(\"User info in Network Card\",userInfo);\n  const handleCardClick = () => {\n    const newlySelected = !isSelected;\n    setIsSelected(newlySelected);\n    if (newlySelected) {\n      setSelectedUser(prevUsers => [...prevUsers, userInfo]);\n    } else {\n      setSelectedUser(prevUsers => prevUsers.filter(user => user.id !== userInfo.id));\n    }\n  };\n  console.log(selectedUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clickable\",\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"|  +--------------------------------------+  |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `user-info ${isSelected ? 'selected-user' : ''}`,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selection-indicator\",\n        children: [\" \", isSelected ? userInfo.id : '○', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 79\n      }, this), \"   \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `selection-indicator ${isSelected ? 'selected-user' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 161\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-text\",\n        children: userInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 246\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-text\",\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 297\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"|  +--------------------------------------+  |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"|                                            |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), selectedUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedUsers.map(user =>\n        /*#__PURE__*/\n        // The `key` prop is essential for React to manage the list efficiently\n        _jsxDEV(\"li\", {\n          children: [user.name, \" (\", user.username, \")\"]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .checkbox-option{\n                    margin-left: 2.0px;\n                }\n                \n                .selected-user {\n                    border: 2px solid blue;\n                    margin-left: 25px;\n                    max-width: 308px;\n                    height: 20px;\n                }\n                \n                .user-info {\n                    display: flex;\n                    align-items: center;\n                }\n                \n                .selection-indicator {\n                    margin-right: 10px;\n                    margin-left: 20px;\n                    font-weight: bold;\n                    color: #2196f3;\n                    \n                }\n                \n                .card-text {\n                    margin-right: 15px;\n                }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(NetworkCard, \"HNVDBdBBt6+9SXi2LIYGm/Atvr0=\");\n_c = NetworkCard;\nexport default NetworkCard;\nvar _c;\n$RefreshReg$(_c, \"NetworkCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NetworkCard","userInfo","_s","isSelected","setIsSelected","selectedUsers","setSelectedUser","handleCardClick","newlySelected","prevUsers","filter","user","id","console","log","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","name","username","length","map","_c","$RefreshReg$"],"sources":["/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/ui/NetworkCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst NetworkCard = ({ userInfo }) => {\n    const [isSelected, setIsSelected] = useState(false);\n    const [selectedUsers, setSelectedUser] = useState([]);\n\n    //console.log(\"User info in Network Card\",userInfo);\n    const handleCardClick = () => {\n       const newlySelected = !isSelected;\n       setIsSelected(newlySelected)\n\n       if(newlySelected){\n            setSelectedUser(prevUsers => [...prevUsers, userInfo]);\n       }\n       else{\n            setSelectedUser(prevUsers => prevUsers.filter(user => user.id !== userInfo.id));\n       }\n    };\n\n    \n    console.log(selectedUsers);\n  \n    return (\n        <div  className=\"clickable\" onClick={handleCardClick}>\n            <div>|  +--------------------------------------+  |</div>\n           <div className={`user-info ${isSelected ? 'selected-user' : ''}`}> <span className=\"selection-indicator\"> {isSelected ? userInfo.id : '○'} </span>   <span className={`selection-indicator ${isSelected ? 'selected-user' : ''}`}></span> <span className=\"card-text\">{userInfo.name}</span> <span className=\"card-text\">{userInfo.username}</span> </div>\n            <div>|  +--------------------------------------+  |</div>\n            <div>|                                            |</div>\n            <div>\n                <h2>Selected Users:</h2>\n                {/* Check if the array is empty before trying to map */}\n                {selectedUsers.length > 0 ? (\n                    <ul>\n                    {selectedUsers.map(user => (\n                        // The `key` prop is essential for React to manage the list efficiently\n                        <li key={user.id}>\n                        {user.name} ({user.username})\n                        </li>\n                    ))}\n                    </ul>\n                ) : (\n                    <p>No users selected.</p>\n                )}\n            </div>\n             <style>{`\n                .checkbox-option{\n                    margin-left: 2.0px;\n                }\n                \n                .selected-user {\n                    border: 2px solid blue;\n                    margin-left: 25px;\n                    max-width: 308px;\n                    height: 20px;\n                }\n                \n                .user-info {\n                    display: flex;\n                    align-items: center;\n                }\n                \n                .selection-indicator {\n                    margin-right: 10px;\n                    margin-left: 20px;\n                    font-weight: bold;\n                    color: #2196f3;\n                    \n                }\n                \n                .card-text {\n                    margin-right: 15px;\n                }\n            `}</style>\n        </div>\n        \n    );\n};\n\nexport default NetworkCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}