{"ast":null,"code":"var _jsxFileName = \"/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/SendEvites.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport NavigationBar from \"./ui/NavigationBar\";\nimport SendEvitesHeader from \"./ui/SendEvitesHeader\";\nimport NetworkCard from \"./ui/NetworkCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SendEvites() {\n  _s();\n  const loadNetworkApi = \"http://localhost:3001/api/load_network\";\n  const [users, setUsers] = useState([]);\n  const [activeTab, setActiveTab] = useState('HOME');\n  const handleReturnHome = () => {\n    console.log(\"Returning to home\");\n    setActiveTab('HOME');\n  };\n  const handleUserInfo = () => {\n    console.log(\"Show user info\");\n  };\n  const loadNetwork = async () => {\n    try {\n      const response = await fetch(loadNetworkApi);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const network = await response.json();\n      //console.log(\"This is your network:\", network);\n\n      const processedUsers = network.map(user => ({\n        id: user.id,\n        name: user.first_name + \" \" + user.last_name,\n        username: user.username\n      }));\n      setUsers(processedUsers);\n    } catch (error) {\n      console.log(\"erro loading network\", error);\n    }\n  };\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const handleSelectUser = userToToggle => {\n    // Check if the user is already selected\n    const isAlreadySelected = selectedUsers.some(user => user.id === userToToggle.id);\n    if (isAlreadySelected) {\n      // If so, remove them from the array\n      setSelectedUsers(prevUsers => prevUsers.filter(user => user.id !== userToToggle.id));\n    } else {\n      // If not, add them to the array\n      setSelectedUsers(prevUsers => [...prevUsers, userToToggle]);\n    }\n  };\n\n  // --- Effects ---\n  useEffect(() => {\n    loadNetwork();\n  }, []);\n\n  //console.log(\"After processing users: \", users);\n  const all_users = users;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ascii-container\",\n    style: {\n      fontFamily: 'monospace',\n      backgroundColor: '#f0f0f0',\n      padding: '20px',\n      borderRadius: '8px',\n      whiteSpace: 'pre'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SendEvitesHeader, {\n      onReturnHome: handleReturnHome,\n      onUserInfo: handleUserInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"|           [ Your Network ]                 |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"|                                            |\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), selectedUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" (\", user.username, \")\"]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }, this), all_users.length > 0 ? all_users.map(users => /*#__PURE__*/_jsxDEV(NetworkCard, {\n      userInfo: users,\n      isSelected: selectedUsers.some(selected => selected.id === users.id),\n      onCardClick: handleSelectUser\n    }, users.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"|  +--------------------------------------+  |\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"|  |    Your Network is Empty             |  |\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"|  +--------------------------------------+  |\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"|                                            |\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .form-input, .form-textarea, .date-input, .time-input, input[type=\"checkbox\"], label {\n                    background-color: transparent;\n                    border: none;\n                    outline: none;\n                    font-family: monospace;\n                    color: #333;\n                    vertical-align: middle;\n                }\n                button {\n                    font-family: monospace;\n                    cursor: pointer;\n                    background-color: #ddd;\n                    border: 1px solid #000;\n                    padding: 2px 4px;\n                }\n                .nav-item { cursor: pointer; }\n                .nav-item.active { font-weight: bold; }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(SendEvites, \"mLeeRDwc4D4MqthL6Mo2eU6h3ac=\");\n_c = SendEvites;\nvar _c;\n$RefreshReg$(_c, \"SendEvites\");","map":{"version":3,"names":["useState","useEffect","NavigationBar","SendEvitesHeader","NetworkCard","jsxDEV","_jsxDEV","Fragment","_Fragment","SendEvites","_s","loadNetworkApi","users","setUsers","activeTab","setActiveTab","handleReturnHome","console","log","handleUserInfo","loadNetwork","response","fetch","ok","Error","status","network","json","processedUsers","map","user","id","name","first_name","last_name","username","error","selectedUsers","setSelectedUsers","handleSelectUser","userToToggle","isAlreadySelected","some","prevUsers","filter","all_users","className","style","fontFamily","backgroundColor","padding","borderRadius","whiteSpace","children","onReturnHome","onUserInfo","fileName","_jsxFileName","lineNumber","columnNumber","length","userInfo","isSelected","selected","onCardClick","_c","$RefreshReg$"],"sources":["/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/SendEvites.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport NavigationBar from \"./ui/NavigationBar\";\nimport SendEvitesHeader from \"./ui/SendEvitesHeader\";\nimport NetworkCard from \"./ui/NetworkCard\";\nexport default function SendEvites() {\n\n    const loadNetworkApi = \"http://localhost:3001/api/load_network\";\n    const [users, setUsers] = useState([]);\n    const [activeTab, setActiveTab] = useState('HOME');\n\n    const handleReturnHome = () => {\n        console.log(\"Returning to home\");\n        setActiveTab('HOME');\n    };\n\n    const handleUserInfo = () => {\n        console.log(\"Show user info\");\n    };\n\n    const loadNetwork = async () => {\n        try{\n            const response = await fetch(loadNetworkApi);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const network = await response.json();\n            //console.log(\"This is your network:\", network);\n\n            const processedUsers = network.map(user => ({\n                id: user.id,\n                name: user.first_name + \" \" + user.last_name,\n                username: user.username \n            }));\n            setUsers(processedUsers);\n        }catch (error){\n            console.log(\"erro loading network\", error);\n        }\n\n    };\n\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    const handleSelectUser = (userToToggle) => {\n        // Check if the user is already selected\n        const isAlreadySelected = selectedUsers.some(user => user.id === userToToggle.id);\n\n        if (isAlreadySelected) {\n            // If so, remove them from the array\n            setSelectedUsers(prevUsers => prevUsers.filter(user => user.id !== userToToggle.id));\n        } else {\n            // If not, add them to the array\n            setSelectedUsers(prevUsers => [...prevUsers, userToToggle]);\n        }\n    };\n\n    // --- Effects ---\n    useEffect(() => {\n        loadNetwork();\n    }, []);\n\n    //console.log(\"After processing users: \", users);\n    const all_users = users;\n    return(\n        <div className=\"ascii-container\" style={{ \n            fontFamily: 'monospace', \n            backgroundColor: '#f0f0f0', \n            padding: '20px', \n            borderRadius: '8px', \n            whiteSpace: 'pre' \n        }}>\n        <SendEvitesHeader onReturnHome={handleReturnHome} onUserInfo={handleUserInfo} />\n        {/* Your Network */}\n                    <div>|           [ Your Network ]                 |</div>\n                    <div>|                                            |</div>\n                                <div>\n                <h2>Selected Users:</h2>\n                {selectedUsers.length > 0 ? (\n                    <ul>\n                        {selectedUsers.map(user => (\n                            <li key={user.id}>\n                                {user.name} ({user.username})\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No users selected.</p>\n                )}\n            </div>\n        \n        {all_users.length > 0 ? (\n            all_users.map (users => (\n                <NetworkCard \n                    key={users.id} \n                    userInfo={users}\n                    isSelected={selectedUsers.some(selected => selected.id === users.id)}\n                    onCardClick={handleSelectUser}\n                />\n            ))\n        ) : (\n            <>\n                <div>|  +--------------------------------------+  |</div>\n                <div>|  |    Your Network is Empty             |  |</div>\n                <div>|  +--------------------------------------+  |</div>\n                <div>|                                            |</div>\n            </> \n        )}\n\n        <NavigationBar/>\n        <style>{`\n                .form-input, .form-textarea, .date-input, .time-input, input[type=\"checkbox\"], label {\n                    background-color: transparent;\n                    border: none;\n                    outline: none;\n                    font-family: monospace;\n                    color: #333;\n                    vertical-align: middle;\n                }\n                button {\n                    font-family: monospace;\n                    cursor: pointer;\n                    background-color: #ddd;\n                    border: 1px solid #000;\n                    padding: 2px 4px;\n                }\n                .nav-item { cursor: pointer; }\n                .nav-item.active { font-weight: bold; }\n            `}</style>\n        </div>\n    )\n    \n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}