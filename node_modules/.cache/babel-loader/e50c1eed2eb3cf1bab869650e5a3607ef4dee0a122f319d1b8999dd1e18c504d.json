{"ast":null,"code":"var _jsxFileName = \"/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/SendEvites.jsx\";\nimport NavigationBar from \"./ui/NavigationBar\";\nimport SendEvitesHeader from \"./ui/SendEvitesHeader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SendEvites() {\n  const loadNetworkApi = \"http://localhost:3001/api/load_network\";\n  const loadNetwork = async () => {\n    try {\n      const response = await fetch(loadNetworkApi);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const network = await response.json();\n      console.log(\"This is your network:\", network);\n      const processUsers = network.map(user => ({\n        id: user.id,\n        name: user.first_name + \" \" + user.last_name,\n        username: user.username\n      }));\n    } catch (error) {\n      console.log(\"erro loading network\", error);\n    }\n  };\n  loadNetwork();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SendEvitesHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \";\", /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .clickable { cursor: pointer; text-decoration: underline; color: blue; }\n                a.clickable { color: blue; }\n                .form-input, .form-textarea, .date-input, .time-input, input[type=\"checkbox\"], label {\n                    background-color: transparent;\n                    border: none;\n                    outline: none;\n                    font-family: monospace;\n                    color: #333;\n                    vertical-align: middle;\n                }\n                button {\n                    font-family: monospace;\n                    cursor: pointer;\n                    background-color: #ddd;\n                    border: 1px solid #000;\n                    padding: 2px 4px;\n                }\n                .nav-item { cursor: pointer; }\n                .nav-item.active { font-weight: bold; }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = SendEvites;\nvar _c;\n$RefreshReg$(_c, \"SendEvites\");","map":{"version":3,"names":["NavigationBar","SendEvitesHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","SendEvites","loadNetworkApi","loadNetwork","response","fetch","ok","Error","status","network","json","console","log","processUsers","map","user","id","name","first_name","last_name","username","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jameskarui/Desktop/MYAPP/evite-app/src/components/SendEvites.jsx"],"sourcesContent":["import NavigationBar from \"./ui/NavigationBar\";\nimport SendEvitesHeader from \"./ui/SendEvitesHeader\";\nexport default function SendEvites() {\n    const loadNetworkApi = \"http://localhost:3001/api/load_network\";\n    const loadNetwork = async () => {\n        try{\n            const response = await fetch(loadNetworkApi);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const network = await response.json();\n            console.log(\"This is your network:\", network);\n\n            const processUsers = network.map(user => ({\n                id: user.id,\n                name: user.first_name + \" \" + user.last_name,\n                username: user.username \n            }));\n        }catch (error){\n            console.log(\"erro loading network\", error);\n        }\n\n    };\n\n    loadNetwork();\n\n\n    return(\n        <> \n        <SendEvitesHeader/>;\n        \n        \n        <NavigationBar/>;\n        <style>{`\n                .clickable { cursor: pointer; text-decoration: underline; color: blue; }\n                a.clickable { color: blue; }\n                .form-input, .form-textarea, .date-input, .time-input, input[type=\"checkbox\"], label {\n                    background-color: transparent;\n                    border: none;\n                    outline: none;\n                    font-family: monospace;\n                    color: #333;\n                    vertical-align: middle;\n                }\n                button {\n                    font-family: monospace;\n                    cursor: pointer;\n                    background-color: #ddd;\n                    border: 1px solid #000;\n                    padding: 2px 4px;\n                }\n                .nav-item { cursor: pointer; }\n                .nav-item.active { font-weight: bold; }\n            `}</style>\n        </>\n    )\n    \n}"],"mappings":";AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACrD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACjC,MAAMC,cAAc,GAAG,wCAAwC;EAC/D,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,cAAc,CAAC;MAC5C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7D;MACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,OAAO,CAAC;MAE7C,MAAMI,YAAY,GAAGJ,OAAO,CAACK,GAAG,CAACC,IAAI,KAAK;QACtCC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACG,UAAU,GAAG,GAAG,GAAGH,IAAI,CAACI,SAAS;QAC5CC,QAAQ,EAAEL,IAAI,CAACK;MACnB,CAAC,CAAC,CAAC;IACP,CAAC,QAAOC,KAAK,EAAC;MACVV,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAES,KAAK,CAAC;IAC9C;EAEJ,CAAC;EAEDlB,WAAW,CAAC,CAAC;EAGb,oBACIL,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACAxB,OAAA,CAACF,gBAAgB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAGnB,eAAA5B,OAAA,CAACH,aAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAChB,eAAA5B,OAAA;MAAAwB,QAAA,EAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACZ,CAAC;AAGX;AAACC,EAAA,GAvDuB1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}